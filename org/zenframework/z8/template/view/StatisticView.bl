import org.zenframework.z8.template.model.CustomUser;
import org.zenframework.z8.base.table.value.IntExpression;
import org.zenframework.z8.base.table.value.DecimalExpression;
import org.zenframework.z8.template.model.Task;
import org.zenframework.z8.template.model.Status;


[entry]
[request true]
[displayName "Статистика"]
[presentation "table"]
public class StatisticView extends CustomUser {

    [displayName "Кол-во созданых задач"] public IntExpression taskCreateCount = class {
        virtual public int get() {
            Task task;
            return task.count(container.recordId.get() == (sql_guid) task.userIdCreate);
        }
    };


    [displayName "Кол-во выполненных задач"] public IntExpression taskExecCount = class {
        virtual public int get() {
            Task task;
            return task.count(
                    (task.statusId == (sql_guid) Status.Done)
                    && (container.recordId.get() == (sql_guid) task.userIdExec)
            );
        }
    };


    [displayName "Процент выполненных задач"] public DecimalExpression taskExecInTimePer = class {
        virtual public decimal get() {
            Task task;
            decimal inTimeExecCount = task.count(
                    (task.statusId == (sql_guid) Status.Done)
                    && (container.recordId.get() == (sql_guid) task.userIdExec)
                    && (task.endAtReal <= (sql_date) task.endAtPlanned)
            ) * 1.0;

            decimal execCount = task.count(
                    (task.statusId == (sql_guid) Status.Done)
                    && (container.recordId.get() == (sql_guid) task.userIdExec)
            ) * 1.0;

            if (execCount == 0.0) {
                return execCount;
            }

            return inTimeExecCount / execCount * 100;
        }
    };

    columns = {name, taskCreateCount, taskExecCount, taskExecInTimePer};
}