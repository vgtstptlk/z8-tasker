import org.zenframework.z8.base.table.Table;
import org.zenframework.z8.base.table.value.IntField;
import org.zenframework.z8.base.table.value.Join;
import org.zenframework.z8.base.table.value.JoinType;
import org.zenframework.z8.base.table.value.StringExpression;


[generatable]
[name "Project"]
public class Project extends Table {

	[displayName "Наименование"] name;

	[name "code"]
	[displayName "Уникальное наименование"]
	public IntField code;

    public Task task;
    public Join taskJoin = class {
        joinType = JoinType.Left;
        virtual protected sql_bool expression(){
            return container.recordId == (sql_guid) container.task.projectId;
        }
    };
    taskJoin = task;

    public CustomUser user;
    public Join userJoin = class {
         joinType = JoinType.Left;
         virtual protected sql_bool expression(){
            return container.recordId == (sql_guid) container.user.projectId;
         }
    };
    userJoin = user;

    public ProjectUser projectUser;
    public Join projectJoin = class {
        joinType = JoinType.Left;
        virtual protected sql_bool expression(){
            return container.recordId == (sql_guid) container.projectUser.projectId;
        }
    };
    projectJoin = projectUser;

    virtual protected void beforeCreate(guid recordId) {
        super.beforeCreate(recordId);
        this.code = code.getSequencer().next();
    }

}